name: Playwright Tests

on:
  # Your existing automatic triggers
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  # schedule:
  #   # Run tests daily at 2 AM UTC
  #   - cron: '0 2 * * *'
  
  # Manual trigger with dropdowns
  workflow_dispatch:
    inputs:
      environment:
        description: 'Test Environment'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - production
      browser:
        description: 'Browser to Test'
        required: true
        default: 'chromium'
        type: choice
        options:
          - chromium
          - firefox
          - webkit
          - mobile-chrome
          - all-browsers
      test_type:
        description: 'Type of Tests to Run'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - ui-only
          - api-only
          - e2e-only
          - advanced
      headed_mode:
        description: 'Run in Headed Mode (visible browser)'
        required: false
        default: false
        type: boolean

# Add permissions for GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # Manual test job
  manual-test:
    if: github.event_name == 'workflow_dispatch'
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install root dependencies
      run: npm ci
    
    - name: Install Angular dependencies
      run: |
        cd angular-app
        npm ci
    
    - name: Build Angular app
      run: |
        cd angular-app
        npm run build --if-present
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    # NEW: Start Angular app in background
    - name: Start Angular app
      run: |
        cd angular-app
        npm start &
        echo "Angular app started in background"
        
        # Wait for app to be ready (max 2 minutes)
        timeout=120
        while [ $timeout -gt 0 ]; do
          if curl -f http://localhost:4200 >/dev/null 2>&1; then
            echo "‚úÖ Angular app is ready!"
            break
          fi
          echo "‚è≥ Waiting for Angular app to start... ($timeout seconds left)"
          sleep 5
          timeout=$((timeout-5))
        done
        
        if [ $timeout -le 0 ]; then
          echo "‚ùå Angular app failed to start within 2 minutes"
          exit 1
        fi
      env:
        CI: true
    
    - name: Run Playwright tests (Single Browser)
      if: ${{ github.event.inputs.browser != 'all-browsers' }}
      env:
        TEST_ENV: ${{ github.event.inputs.environment }}
        CI: true
        BASE_URL: http://localhost:4200
      run: |
        HEADED_FLAG=""
        if [ "${{ github.event.inputs.headed_mode }}" == "true" ]; then
          HEADED_FLAG="--headed"
        fi
        
        case "${{ github.event.inputs.test_type }}" in
          "ui-only")
            npx playwright test tests/ui/ --project=${{ github.event.inputs.browser }} $HEADED_FLAG
            ;;
          "api-only")
            npx playwright test tests/api/ --project=${{ github.event.inputs.browser }}
            ;;
          "e2e-only")
            npx playwright test tests/e2e/ --project=${{ github.event.inputs.browser }} $HEADED_FLAG
            ;;
          "advanced")
            npx playwright test tests/advanced/ --project=${{ github.event.inputs.browser }} $HEADED_FLAG
            ;;
          *)
            npx playwright test --project=${{ github.event.inputs.browser }} $HEADED_FLAG
            ;;
        esac
    
    - name: Run Playwright tests (All Browsers)
      if: ${{ github.event.inputs.browser == 'all-browsers' }}
      env:
        TEST_ENV: ${{ github.event.inputs.environment }}
        CI: true
        BASE_URL: http://localhost:4200
      run: |
        HEADED_FLAG=""
        if [ "${{ github.event.inputs.headed_mode }}" == "true" ]; then
          HEADED_FLAG="--headed"
        fi
        
        case "${{ github.event.inputs.test_type }}" in
          "ui-only")
            npx playwright test tests/ui/ $HEADED_FLAG
            ;;
          "api-only")
            npx playwright test tests/api/
            ;;
          "e2e-only")
            npx playwright test tests/e2e/ $HEADED_FLAG
            ;;
          "advanced")
            npx playwright test tests/advanced/ $HEADED_FLAG
            ;;
          *)
            npx playwright test $HEADED_FLAG
            ;;
        esac
    
    - name: Upload Playwright Report (Manual)
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: manual-report-${{ github.event.inputs.environment }}-${{ github.event.inputs.browser }}-${{ github.event.inputs.test_type }}
        path: playwright-report/
        retention-days: 30

  # Automatic test job
  auto-test:
    if: github.event_name != 'workflow_dispatch'
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [development, staging]
        browser: [chromium, firefox, webkit]
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install root dependencies
      run: npm ci
    
    - name: Install Angular dependencies
      run: |
        cd angular-app
        npm ci
    
    - name: Build Angular app
      run: |
        cd angular-app
        npm run build --if-present
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    # NEW: Start Angular app in background  
    - name: Start Angular app
      run: |
        cd angular-app
        npm start &
        echo "Angular app started in background"
        
        # Wait for app to be ready (max 2 minutes)
        timeout=120
        while [ $timeout -gt 0 ]; do
          if curl -f http://localhost:4200 >/dev/null 2>&1; then
            echo "‚úÖ Angular app is ready at http://localhost:4200"
            break
          fi
          echo "‚è≥ Waiting for Angular app to start... ($timeout seconds left)"
          sleep 5
          timeout=$((timeout-5))
        fi
        
        if [ $timeout -le 0 ]; then
          echo "‚ùå Angular app failed to start within 2 minutes"
          exit 1
        fi
      env:
        CI: true
    
    - name: Run Playwright tests
      env:
        TEST_ENV: ${{ matrix.environment }}
        CI: true
        BASE_URL: http://localhost:4200
      run: npx playwright test --project=${{ matrix.browser }}
    
    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: auto-report-${{ matrix.environment }}-${{ matrix.browser }}
        path: playwright-report/
        retention-days: 30

  # Updated deploy-report job with modern GitHub Pages
  deploy-report:
    if: always() && github.ref == 'refs/heads/main'
    needs: [manual-test, auto-test]
    runs-on: ubuntu-latest
    
    # Set up GitHub Pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./reports
    
    - name: Create combined report index
      run: |
        mkdir -p ./combined-report
        echo "<!DOCTYPE html>" > ./combined-report/index.html
        echo "<html><head><title>Playwright Test Reports</title>" >> ./combined-report/index.html
        echo "<style>" >> ./combined-report/index.html
        echo "body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; margin: 40px; background: #f5f5f5; }" >> ./combined-report/index.html
        echo "h1 { color: #1976d2; margin-bottom: 10px; }" >> ./combined-report/index.html
        echo "h2 { color: #333; margin-top: 30px; }" >> ./combined-report/index.html
        echo ".container { background: white; padding: 30px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }" >> ./combined-report/index.html
        echo "ul { list-style-type: none; padding: 0; }" >> ./combined-report/index.html
        echo "li { margin: 10px 0; }" >> ./combined-report/index.html
        echo "a { text-decoration: none; color: #1976d2; padding: 12px 20px; border: 1px solid #1976d2; border-radius: 6px; display: inline-block; transition: all 0.3s; }" >> ./combined-report/index.html
        echo "a:hover { background: #1976d2; color: white; transform: translateY(-1px); }" >> ./combined-report/index.html
        echo ".meta { color: #666; font-size: 14px; }" >> ./combined-report/index.html
        echo ".badge { background: #4caf50; color: white; padding: 4px 8px; border-radius: 4px; font-size: 12px; }" >> ./combined-report/index.html
        echo ".status { margin: 20px 0; padding: 15px; background: #e8f5e8; border-left: 4px solid #4caf50; }" >> ./combined-report/index.html
        echo "</style>" >> ./combined-report/index.html
        echo "</head><body>" >> ./combined-report/index.html
        echo "<div class='container'>" >> ./combined-report/index.html
        echo "<h1>üß™ Playwright Test Reports</h1>" >> ./combined-report/index.html
        echo "<div class='status'>‚úÖ Tests executed with Angular app running on localhost:4200</div>" >> ./combined-report/index.html
        echo "<p class='meta'>Generated on $(date) | <span class='badge'>Latest Run</span></p>" >> ./combined-report/index.html
        echo "<h2>üìä Available Reports:</h2><ul>" >> ./combined-report/index.html
        
        for dir in ./reports/*/; do
          if [ -d "$dir" ]; then
            dirname=$(basename "$dir")
            echo "<li><a href='$dirname/index.html'>üìã $dirname</a></li>" >> ./combined-report/index.html
            cp -r "$dir" "./combined-report/"
          fi
        done
        
        echo "</ul>" >> ./combined-report/index.html
        echo "<h2>üîó Quick Links:</h2>" >> ./combined-report/index.html
        echo "<ul>" >> ./combined-report/index.html
        echo "<li><a href='https://github.com/${{ github.repository }}/actions'>üèÉ GitHub Actions</a></li>" >> ./combined-report/index.html
        echo "<li><a href='https://github.com/${{ github.repository }}'>üìÅ Repository</a></li>" >> ./combined-report/index.html
        echo "</ul>" >> ./combined-report/index.html
        echo "</div></body></html>" >> ./combined-report/index.html
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload artifact for Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./combined-report
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  # Summary job
  summary:
    if: always()
    needs: [manual-test, auto-test]
    runs-on: ubuntu-latest
    
    steps:
    - name: Create Test Summary
      run: |
        echo "## üß™ Playwright Test Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "### üéõÔ∏è Manual Test Run" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment:** ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Browser:** ${{ github.event.inputs.browser }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Test Type:** ${{ github.event.inputs.test_type }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Headed Mode:** ${{ github.event.inputs.headed_mode }}" >> $GITHUB_STEP_SUMMARY
        else
          echo "### ü§ñ Automatic Test Run" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Environments:** development, staging" >> $GITHUB_STEP_SUMMARY
          echo "- **Browsers:** chromium, firefox, webkit" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üöÄ Application Status" >> $GITHUB_STEP_SUMMARY
        echo "- **Angular App:** Running on localhost:4200 during tests" >> $GITHUB_STEP_SUMMARY
        echo "- **Test Execution:** Against live Angular application" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üìä Reports" >> $GITHUB_STEP_SUMMARY
        echo "- üìã [View All Test Reports](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/)" >> $GITHUB_STEP_SUMMARY
        echo "- üèÉ [View Workflow Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
